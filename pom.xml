<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- Plugins -->
        <version.maven-war-plugin>3.2.2</version.maven-war-plugin>
        <version.dockerfile-maven-plugin>1.4.10</version.dockerfile-maven-plugin>
        <version.maven-surefire-plugin>3.0.0-M1</version.maven-surefire-plugin>
        <version.maven-failsafe-plugin>3.0.0-M1</version.maven-failsafe-plugin>
        <!-- OpenLiberty runtime -->
        <liberty.groupId>io.openliberty</liberty.groupId>
        <liberty.artifactId>openliberty-runtime</liberty.artifactId>
        <http.port>9080</http.port>
        <https.port>9443</https.port>
        <packaging.type>usr</packaging.type>
	<app.name>${project.artifactId}</app.name>
	 <file.repo.name>migrationassets</file.repo.name>	
        <!-- Gets overridden in run/debug/test -->
        <wlp.install.dir>${project.build.directory}/liberty/wlp</wlp.install.dir>
    </properties>


    <groupId>dev.appsody.starter.java-openliberty</groupId>
    <artifactId>tamigration</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <repositories>
        <!--local migration assets repo-->
        <repository>
            <id>project.local</id>
            <name>project</name>
            <url>file:/work/outer-loop-app/${file.repo.name}</url>
        </repository>
    </repositories>
    <dependencies>
        <!-- Aggregate of MicroProfile APIs -->
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>3.2</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
		<dependency>
    		<groupId>com.ibm.db2.jcc</groupId>
    		<artifactId>db2jcc</artifactId>
    		<version>db2jcc4</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.collections</groupId>
			<artifactId>eclipse-collections</artifactId>
		<version>10.1.0</version>
		</dependency>
        <!-- example of adding a war file dependency -->
        <dependency>
			<groupId>com.mywar</groupId>
			<artifactId>test-jaxrs-2.0</artifactId>
			<version>1.0</version>
			<type>war</type>
		</dependency>	
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-war-dependency</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- put war dependency file in target after dependency resolution -->
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <excludeTransitive>true</excludeTransitive>
                            <includeTypes>war</includeTypes>
                        </configuration>
                    </execution>
                    <!-- example of how to move a resource adapter dependency -->
                    <execution>
                        <id>copy-resource-adapter-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
							<outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources</outputDirectory>
							<includeGroupIds>com.ibm.db2.jcc</includeGroupIds>
                            <includeArtifactIds>db2jcc</includeArtifactIds>
                            <includeTypes>jar</includeTypes>
                        </configuration>
                    </execution>
                    <!-- -->
                    <!-- example of how to move a shared library dependency -->
                    <execution>
                        <id>copy-shared-library-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
							<outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/lib</outputDirectory>
							<includeGroupIds>org.eclipse.collections</includeGroupIds>
                            <includeArtifactIds>eclipse-collections</includeArtifactIds>
                            <includeTypes>jar</includeTypes>
                        </configuration>
                    </execution>
                    <!-- -->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.maven-war-plugin}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- Enable liberty-maven plugin -->
            <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <configuration>
                    <assemblyArtifact>
                        <groupId>${liberty.groupId}</groupId>
                        <artifactId>${liberty.artifactId}</artifactId>
                        <version>${version.openliberty-runtime}</version>
                        <type>zip</type>
                    </assemblyArtifact>
                    <stripVersion>true</stripVersion>
                    <serverStartTimeout>120</serverStartTimeout>
                    <bootstrapProperties>
                        <default.http.port>${http.port}</default.http.port>
                        <default.https.port>${https.port}</default.https.port>
                        <app.context.root>${app.name}</app.context.root>
                    </bootstrapProperties>
                </configuration>
            </plugin>
            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                            <reportsDirectory>
                                ${project.build.directory}/test-reports/unit
                            </reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
